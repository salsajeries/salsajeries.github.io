[{"/Users/salwajeries/repos/salsajeries.github.io/src/index.js":"1","/Users/salwajeries/repos/salsajeries.github.io/src/App.js":"2","/Users/salwajeries/repos/salsajeries.github.io/src/components/MechButton.js":"3","/Users/salwajeries/repos/salsajeries.github.io/src/components/TitleType.js":"4","/Users/salwajeries/repos/salsajeries.github.io/src/components/ProjectMenu.js":"5","/Users/salwajeries/repos/salsajeries.github.io/src/components/ProjectItem.js":"6","/Users/salwajeries/repos/salsajeries.github.io/src/components/GalleryScroll.js":"7","/Users/salwajeries/repos/salsajeries.github.io/src/components/StyledImage.js":"8","/Users/salwajeries/repos/salsajeries.github.io/src/assets/images/index.js":"9"},{"size":317,"mtime":1691019132125,"results":"10","hashOfConfig":"11"},{"size":3888,"mtime":1691202918890,"results":"12","hashOfConfig":"11"},{"size":599,"mtime":1691203594356,"results":"13","hashOfConfig":"11"},{"size":455,"mtime":1691019132125,"results":"14","hashOfConfig":"11"},{"size":3005,"mtime":1691202918932,"results":"15","hashOfConfig":"11"},{"size":1576,"mtime":1691202918931,"results":"16","hashOfConfig":"11"},{"size":730,"mtime":1691202918930,"results":"17","hashOfConfig":"11"},{"size":420,"mtime":1691202918932,"results":"18","hashOfConfig":"11"},{"size":1157,"mtime":1691202918929,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"1vka9ra",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/salwajeries/repos/salsajeries.github.io/src/index.js",[],[],[],"/Users/salwajeries/repos/salsajeries.github.io/src/App.js",[],[],"/Users/salwajeries/repos/salsajeries.github.io/src/components/MechButton.js",[],[],"/Users/salwajeries/repos/salsajeries.github.io/src/components/TitleType.js",[],[],"/Users/salwajeries/repos/salsajeries.github.io/src/components/ProjectMenu.js",["51","52","53","54"],[],"import './ProjectMenu.css';\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport SwipeableViews from 'react-swipeable-views';\nimport { useTheme } from '@mui/material/styles';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\nimport Typography from '@mui/material/Typography';\nimport Box from '@mui/material/Box';\nimport ProjectItem from './ProjectItem';\nimport Projects from '../data/projects.json';\nimport {\n    QR1, QR2, QR3,\n    U1, U2, U3, U4,\n    ATTS1, ATTS2, ATTS3,\n    PW1, PW2, PW3, PW4,\n    NCW1, NCW2\n} from '../assets/images'\n\nimport Fade from 'react-reveal/Fade';\n\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n  \n    return (\n      <div\n        role=\"tabpanel\"\n        hidden={value !== index}\n        id={`vertical-tabpanel-${index}`}\n        aria-labelledby={`vertical-tab-${index}`}\n        {...other}\n      >\n        {value === index && (\n          <Box sx={{ p: 3 }}>\n            <Typography>{children}</Typography>\n          </Box>\n        )}\n      </div>\n    );\n};\n  \nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.number.isRequired,\n    value: PropTypes.number.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n};\n  \n\n\nfunction ProjectMenu() {\n    \n    const theme = useTheme();\n    const [value, setValue] = React.useState(0);\n\n    const projectImages = [\n        [QR1, QR2, QR3],\n        [U1, U2, U3, U4],\n        [ATTS1, ATTS2, ATTS3],\n        [PW1, PW2, PW3, PW4],\n        [],\n        [NCW1, NCW2]\n    ];\n\n    const handleChange = (event, newValue) => {\n      setValue(newValue);\n    };\n\n    const handleChangeIndex = (index) => {\n        setValue(index);\n    };\n\n    return (\n        <Box sx={{ width: '100%'}}>\n            <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>\n                <Tabs value={value}\n                    onChange={handleChange}\n                    textColor=\"#EAE0D5\"\n                    variant='scrollable'\n                    scrollButtons='auto'\n                    TabIndicatorProps={{style: {background:'#EAE0D5'}}}\n                >\n                    {Projects.map((p) => {\n                        return (\n                            <Tab\n                                label={p.title}\n                                {...a11yProps(0)}\n                                style={{fontFamily: 'Varela Round, sans-serif'}}\n                            />\n                        );\n                    })}\n                </Tabs>\n            </Box>\n                {Projects.map((p) => {\n                    return (\n                        <TabPanel value={value} index={p.index} width={'100%'}>\n                            <ProjectItem project={p} images={projectImages[p.index]}></ProjectItem>\n                        </TabPanel>\n                    );\n                })}\n        </Box>\n    );\n}\n\nexport default ProjectMenu;","/Users/salwajeries/repos/salsajeries.github.io/src/components/ProjectItem.js",["55"],[],"import { Github, Website } from '../assets/images';\nimport GalleryScroll from './GalleryScroll';\nimport './ProjectItem.css'\nimport MechButton from './MechButton';\nimport Chip from '@mui/material/Chip';\nimport Avatar from '@mui/material/Avatar';\n\n\nfunction ProjectItem(props) {\n\n    const { project, images} = props;\n\n    return (\n        <div className='project-item'>\n            <h1>{project.title}</h1>\n            <h4>{project.dates}</h4>\n            <h5>\n                <ul>\n                    {project.details.map((item) => {\n                        return (\n                            <li style={{ padding: '5px' }}>{item}</li>\n                        );\n                    })}\n                </ul>\n            </h5>\n            <div style={{display: 'flex'}}>\n                <a href={project.github} style={{textDecoration: \"none\", paddingLeft: '20px'}}>\n                    <Chip avatar={<Avatar src={Github} />} label={\"Github\"} sx={{backgroundColor: '#C6AC8F'}} />\n                </a>\n                {project.url !== \"\" ? (\n                    <a href={project.url} style={{textDecoration: \"none\", paddingLeft: '20px'}}>\n                        <Chip avatar={<Avatar src={Website} />} label={\"Website\"} sx={{backgroundColor: '#C6AC8F'}} />\n                    </a>\n                ) : (\n                    <></>\n                )}\n            </div>\n            {images.size !== 0 ? (\n                <GalleryScroll images={images}></GalleryScroll>\n            ) : (\n                <></>\n            )}\n        </div>\n    );\n}\n\nexport default ProjectItem;","/Users/salwajeries/repos/salsajeries.github.io/src/components/GalleryScroll.js",["56","57"],[],"import './GalleryScroll.css'\nimport StyledImage from './StyledImage';\nimport Tabs from '@mui/material/Tabs';\nimport Tab from '@mui/material/Tab';\n\n\n\nfunction GalleryScroll(props) {\n\n    const { images } = props;\n\n    return (\n        <div style={{display: 'flex', alignItems: 'center'}}>\n            <div id='slider' style={{ width: \"100%\", height: '50%', overflowX: \"scroll\", display: \"flex\", alignItems: 'center', padding: '20px' }}>\n                {images.map((img) => {\n                    return (\n                        <StyledImage src={img} height={'50vh'} width={'auto'} padding={'30px'}></StyledImage>\n                    );\n                })}\n            </div>\n        </div>\n    );\n}\n\nexport default GalleryScroll;","/Users/salwajeries/repos/salsajeries.github.io/src/components/StyledImage.js",[],[],"/Users/salwajeries/repos/salsajeries.github.io/src/assets/images/index.js",[],[],{"ruleId":"58","severity":1,"message":"59","line":4,"column":8,"nodeType":"60","messageId":"61","endLine":4,"endColumn":22},{"ruleId":"58","severity":1,"message":"62","line":20,"column":8,"nodeType":"60","messageId":"61","endLine":20,"endColumn":12},{"ruleId":"58","severity":1,"message":"63","line":60,"column":11,"nodeType":"60","messageId":"61","endLine":60,"endColumn":16},{"ruleId":"58","severity":1,"message":"64","line":76,"column":11,"nodeType":"60","messageId":"61","endLine":76,"endColumn":28},{"ruleId":"58","severity":1,"message":"65","line":4,"column":8,"nodeType":"60","messageId":"61","endLine":4,"endColumn":18},{"ruleId":"58","severity":1,"message":"66","line":3,"column":8,"nodeType":"60","messageId":"61","endLine":3,"endColumn":12},{"ruleId":"58","severity":1,"message":"67","line":4,"column":8,"nodeType":"60","messageId":"61","endLine":4,"endColumn":11},"no-unused-vars","'SwipeableViews' is defined but never used.","Identifier","unusedVar","'Fade' is defined but never used.","'theme' is assigned a value but never used.","'handleChangeIndex' is assigned a value but never used.","'MechButton' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used."]